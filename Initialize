#!/bin/bash



latitude=0
longitude=0
wwan=0

##########################The name of the folder were will be saved the files#############################################

folder=$1

if [ -d /home/upboard/Desktop/"$folder" ]; then #If the directory exists

echo "Directory already exists, introduce other name"
exit 0

elif [ "$folder" != "" ]; then  #If the directory name is not empty

 sudo mkdir /home/upboard/Desktop/"$folder"
sudo chmod 777 /home/upboard/Desktop/"$folder"


else #Case for directory name strange or directory name empty

echo "Introduce name of folder"
exit 0

fi









#Initialize the file where the general logs will be saved

filename1=logs_general
echo "" > /home/upboard/Desktop/"$folder"/"$filename1"
sudo chmod 777 /home/upboard/Desktop/"$folder"/"$filename1"




#To initialize the error file and timeout for reboot
filename3=errors_main
echo "" >> /home/upboard/Desktop/"$folder"/"$filename3"
sudo chmod 777 /home/upboard/Desktop/"$folder"/"$filename3"





#################Here comes the start code to be sure all it is okay before we start everything (removing old files)#########################

#Delete the IDGoogleDrive File
if [ -f /home/upboard/Desktop/IDGoogleDrive ]; then

sudo rm /home/upboard/Desktop/IDGoogleDrive

#log purposes
date --iso-8601=ns >> /home/upboard/Desktop/"$folder"/"$filename1"
echo "There was an IDGoogleDrive file and has been deleted" >> /home/upboard/Desktop/"$folder"/"$filename1"

fi

#Delete SIM file if it exists
if [ -f /home/upboard/Desktop/SIM ]; then

sudo rm /home/upboard/Desktop/SIM

#log purposes
date --iso-8601=ns >> /home/upboard/Desktop/"$folder"/"$filename1"
echo "Previous SIM file has been deleted" >> /home/upboard/Desktop/"$folder"/"$filename1"

fi






##########################Initialize the GPIOs that will be used######################################

sudo /home/upboard/Desktop/setUpGPIOs

#log purposes
date --iso-8601=ns >> /home/upboard/Desktop/"$folder"/"$filename1"
echo "Set up of GPIOs done " >> /home/upboard/Desktop/"$folder"/"$filename1"






#Waits until there are coordinates and there is internet connection


#Check that GPS is different from nan #Check that there is a wwan
ready=true

time_out_error=60000000000 #nanoseconds
error_situation=0
time_error_start=$(date +%s%N)
state_modem=fail

#LED ON
#echo "time counter started for getting first connection and coordinates. LED light on" >> /home/upboard/Desktop/"$folder"/"$filename3"
sudo echo "1" > /sys/class/gpio/gpio26/value #RED LED ON


while $ready; do

time_error_now=$(date +%s%N)
time_error_pass=$(echo "$time_error_now - $time_error_start" | bc -l)



if [ "$time_error_pass" -gt "$time_out_error" ];then #timeout SECONDS from the error --> We reboot and start everything again
		
		#log purposes
		date --iso-8601=ns >> /home/upboard/Desktop/"$folder"/"$filename3"
		echo "Time out exceeded for establishing either coordinates or internet/modem connection. Executing rebootInitialize " >> /home/upboard/Desktop/"$folder"/"$filename3"
		echo "The gathered coordinates are " $latitude $longitude "and the seen network" $wwan "and the state of the modem" $state_modem >> /home/upboard/Desktop/"$folder"/"$filename3"
		sudo /home/upboard/Desktop/rebootInitialize $folder 
		

fi

coordinatesInfo=$(sudo python /home/upboard/Desktop/gpsOutput.py)
latitude=$(echo "$coordinatesInfo" | sed -n '1p')
longitude=$(echo "$coordinatesInfo" | sed -n '2p')
wwan=$(netstat -i | grep -o  '\bww\w*') #We extract the name of the network interface that starts with "ww"
latitude=nan
longitude=nan
modem_number_line=$(sudo mmcli -L | sed -n '2p')
echo $wwan


if [ "$modem_number_line" == "No modems were found" ]; then

	#log purposes
	date --iso-8601=ns >> /home/upboard/Desktop/"$folder"/"$filename1"
	echo "NO MODEMS WERE FOUND" >> /home/upboard/Desktop/"$folder"/"$filename1"

else


	modem_number=$(sudo mmcli -L | sed -n '3p' | awk -F"/Modem/" '{print $2}' | awk -F"[Sierra]" '{print $1}' | awk -F"[" '{print $1}')
	state_modem=$(sudo mmcli -m $modem_number | sed -n '21p' | awk -F"'" '{print $2}' )


	#if [ "$wwan" != "" ] && [ "$latitude" != "nan" ] && [ "$longitude" != "nan" ] && [ "$state_modem" == "connected" ]; then #the original for demo
	if [ "$wwan" != "" ] && [ "$state_modem" == "connected" ]; then #the one for testing when only nans appear indoor


	
		sudo echo "0" > /sys/class/gpio/gpio26/value #RED LED OFF

		ready=false
		#log purposes
		date --iso-8601=ns >> /home/upboard/Desktop/"$folder"/"$filename1"
		echo "Coordinates and connection are available. Ready to start" >> /home/upboard/Desktop/"$folder"/"$filename1"
	
	fi

fi
done






#Initialization of the SIM file  and value into it

echo "" > /home/upboard/Desktop/SIM


#log purposes
date --iso-8601=ns >> /home/upboard/Desktop/"$folder"/"$filename1"
echo "SIM file new has been created" >> /home/upboard/Desktop/"$folder"/"$filename1"



#Checks which Operator we are working with and saves it in a file to be readed by the python script
operatorInfo=$(echo $(sudo qmicli -d /dev/cdc-wdm0 -p --device-open-mbim --nas-get-home-network | grep Description) | awk -F"'" '{print $2}')

if [ "$operatorInfo" == "TelenoDK" ]; then #If the SIM is from Telenor

echo "0" > /home/upboard/Desktop/SIM

#log purposes
date --iso-8601=ns >> /home/upboard/Desktop/"$folder"/"$filename1"
echo "SIM from Telenor found (connected to Telenor network). Saved value 0 in SIM file" >> /home/upboard/Desktop/"$folder"/"$filename1"



elif [ "$operatorInfo" == "TDC" ];then 

echo "1" > /home/upboard/Desktop/SIM

#log purposes
date --iso-8601=ns >> /home/upboard/Desktop/"$folder"/"$filename1"
echo "SIM from TDC found (connected to TDC network). Saved value 1 in SIM file" >> /home/upboard/Desktop/"$folder"/"$filename1"


else

echo "2" > /home/upboard/Desktop/SIM



#log terminal purposes
echo "Other operator found"
echo "$operatorInfo"

#log purposes
date --iso-8601=ns >> /home/upboard/Desktop/"$folder"/"$filename1"
echo "Other operator found: " >> /home/upboard/Desktop/"$folder"/"$filename1"
echo "$operatorInfo" >> /home/upboard/Desktop/"$folder"/"$filename1"

#log/error purposes
echo "SIM OTHER OPERATOR FOUND" $operatorInfo "LED light on" >> /home/upboard/Desktop/"$folder"/"$filename3"
sudo echo "1" > /sys/class/gpio/gpio26/value #RED LED ON
error_situation=1

sleep 10


echo "Time out exceeded. Executing rebootInitialize " >> /home/upboard/Desktop/"$folder"/"$filename3"
sudo /home/upboard/Desktop/rebootInitialize $folder

fi









#------------------------------------------------------------------------------------------------------------------------------------------------------------


#  Executes in parallel:
#loopStatistics
#loopPCI
#loopSNR
#loopGPS
#bitrateread
#main

sudo /home/upboard/Desktop/bitrateread $folder &  sudo /home/upboard/Desktop/main $folder & sudo /home/upboard/Desktop/loopPCI $folder  & sudo /home/upboard/Desktop/loopGPS $folder  & sudo /home/upboard/Desktop/loopSNR $folder  & sudo /home/upboard/Desktop/loopStatistics $folder 
