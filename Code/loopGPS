#!/bin/bash

#We get the name of the folder to save the files
folder=$1
filename1=logs_general
filename3=errors_main
error_situation=0

#log purposes
date --iso-8601=ns >> /home/upboard/Desktop/UpBoard-Code-and-Results/Results/"$folder"/"$filename1"
echo "The collection of GPS coordinates has started" >> /home/upboard/Desktop/UpBoard-Code-and-Results/Results/"$folder"/"$filename1"
x=$(date)
namefile=GPScoordinates_$x
echo "" >> /home/upboard/Desktop/UpBoard-Code-and-Results/Results/"$folder"/"$namefile"
sudo chmod 777 /home/upboard/Desktop/UpBoard-Code-and-Results/Results/"$folder"/"$namefile"
counter=0
a=a
b=b

while true; do
((counter++))
if  [ "$counter" -eq 100 ]; then
    counter=1
fi
########################################## Acquiring the coordinates info and saving them ###########################
coordinatesInfo=$(python /home/upboard/Desktop/UpBoard-Code-and-Results/Code/gpsOutput.py)
date --iso-8601=ns >> /home/upboard/Desktop/UpBoard-Code-and-Results/Results/"$folder"/"$namefile"
echo "$coordinatesInfo" >> /home/upboard/Desktop/UpBoard-Code-and-Results/Results/"$folder"/"$namefile"
echo " " >> /home/upboard/Desktop/UpBoard-Code-and-Results/Results/"$folder"/"$namefile" #Blank space

latitude=$(echo "$coordinatesInfo" | sed -n '1p')
longitude=$(echo "$coordinatesInfo" | sed -n '2p')

#We initialize the file currentCoordinates
echo "" > /home/upboard/Desktop/UpBoard-Code-and-Results/Code/BS_orientation/GPS/currentCoordinates$counter$a
sudo chmod 777 /home/upboard/Desktop/UpBoard-Code-and-Results/Code/BS_orientation/GPS/currentCoordinates$counter$a
echo -e "$coordinatesInfo" > /home/upboard/Desktop/UpBoard-Code-and-Results/Code/BS_orientation/GPS/currentCoordinates$counter$a

echo "" > /home/upboard/Desktop/UpBoard-Code-and-Results/Code/BS_orientation/GPS/currentCoordinates$counter$b
sudo chmod 777 /home/upboard/Desktop/UpBoard-Code-and-Results/Code/BS_orientation/GPS/currentCoordinates$counter$b
echo -e "$coordinatesInfo" > /home/upboard/Desktop/UpBoard-Code-and-Results/Code/BS_orientation/GPS/currentCoordinates$counter$b

echo -e "$latitude $longitude\n"

###################### ESTABLISHING AN ERROR SITUATION OR DISABLING IT ############################################

if [ "$error_situation" == "0" ] && ([ "$latitude" == "nan" ] || [ "$longitude" == "nan" ]); then #The error appears --> WE ENTER IN ERROR STATE
	error_situation=1
	#log terminal
	echo -e "Error started. Reason: coordinates nan"
	#log purposes
	date --iso-8601=ns >> /home/upboard/Desktop/UpBoard-Code-and-Results/Results/"$folder"/"$filename3"
	echo -e "Coordinates lost (nan). Error started \n" >> /home/upboard/Desktop/UpBoard-Code-and-Results/Results/"$folder"/"$filename3"

elif [ "$error_situation" == "1" ] && ([ "$latitude" != "nan" ] && [ "$longitude" != "nan" ]); then #The error disappears --> WE LEAVE THE ERROR STATE
	error_situation=0	
	#log terminal purposes
	echo -e "Error FINISHED. Reason: coordinates nan"
	#log purposes
	date --iso-8601=ns >> /home/upboard/Desktop/UpBoard-Code-and-Results/Results/"$folder"/"$filename3"
	echo -e "Coordinates recovered again. Error finished \n" >> /home/upboard/Desktop/UpBoard-Code-and-Results/Results/"$folder"/"$filename3"
fi



done

