#!/bin/bash

#We get the name of the folder to save the files
folder=$1

filename1=logs_general
filename3=errors_main

#time_out_error=15000000000 #nanoseconds
time_out_error=1500000000000 #nanoseconds
error_situation=0
time_error_start=0
time_error_now=0


#log purposes
date --iso-8601=ns >> /home/upboard/Desktop/UpBoard-Code-and-Results/Results/"$folder"/"$filename1"
echo "The collection of GPS coordinates has started" >> /home/upboard/Desktop/UpBoard-Code-and-Results/Results/"$folder"/"$filename1"

# On the one hand, the coordinates and the time will be saved in the variables: latitude, longitude and time.

x=$(date)
namefile=GPScoordinates_$x



echo "" >> /home/upboard/Desktop/UpBoard-Code-and-Results/Results/"$folder"/"$namefile"
sudo chmod 777 /home/upboard/Desktop/UpBoard-Code-and-Results/Results/"$folder"/"$namefile"

counter=0
a=a
b=b
while true; do
((counter++))
if  [ "$counter" -eq 100 ]; then
    counter=1
fi


########################################## Acquiring the coordinates info and saving them ###########################

coordinatesInfo=$(python /home/upboard/Desktop/UpBoard-Code-and-Results/Code/gpsOutput.py)
echo $coordinatesInfo
date --iso-8601=ns >> /home/upboard/Desktop/UpBoard-Code-and-Results/Results/"$folder"/"$namefile"
echo "$coordinatesInfo" >> /home/upboard/Desktop/UpBoard-Code-and-Results/Results/"$folder"/"$namefile"

latitude=$(echo "$coordinatesInfo" | sed -n '1p')
longitude=$(echo "$coordinatesInfo" | sed -n '2p')

#latitude=$(cat /home/upboard/Desktop/lat) #Debug purposes
#longitude=$(cat /home/upboard/Desktop/lon) #Debug purposes

#latitude=20 #Debug purposes
#longitude=40 #Debug purposes


#log purposes
#date --iso-8601=ns >> /home/upboard/Desktop/UpBoard-Code-and-Results/Results/"$folder"/"$filename1"
#echo "Start writing Coordinates" >> /home/upboard/Desktop/UpBoard-Code-and-Results/Results/"$folder"/"$filename1"


#We initialize the file currentCoordinates
echo "" > /home/upboard/Desktop/UpBoard-Code-and-Results/Code/BS_orientation/GPS/currentCoordinates$counter$a
sudo chmod 777 /home/upboard/Desktop/UpBoard-Code-and-Results/Code/BS_orientation/GPS/currentCoordinates$counter$a
echo -e "$latitude\n$longitude" > /home/upboard/Desktop/UpBoard-Code-and-Results/Code/BS_orientation/GPS/currentCoordinates$counter$a

echo "" > /home/upboard/Desktop/UpBoard-Code-and-Results/Code/BS_orientation/GPS/currentCoordinates$counter$b
sudo chmod 777 /home/upboard/Desktop/UpBoard-Code-and-Results/Code/BS_orientation/GPS/currentCoordinates$counter$b
echo -e "$latitude\n$longitude" > /home/upboard/Desktop/UpBoard-Code-and-Results/Code/BS_orientation/GPS/currentCoordinates$counter$b

echo -e "$latitude\n$longitude\n"

#log purposes
#date --iso-8601=ns >> /home/upboard/Desktop/UpBoard-Code-and-Results/Results/"$folder"/"$filename1"
#echo -e "Finish writing Coordinates\n" >> /home/upboard/Desktop/UpBoard-Code-and-Results/Results/"$folder"/"$filename1"



echo " " >> /home/upboard/Desktop/UpBoard-Code-and-Results/Results/"$folder"/"$namefile" #Blank space




###################### ESTABLISHING AN ERROR SITUATION OR DISABLING IT ############################################

if [ "$error_situation" == "0" ] && ([ "$latitude" == "nan" ] || [ "$longitude" == "nan" ]); then #The error appears --> WE ENTER IN ERROR STATE
	
	#echo entering 1

	time_error_start=$(date +%s%N)
	error_situation=1
	sudo echo "1" > /sys/class/gpio/gpio26/value #RED LED ON

	#log terminal
	echo -e "Error started. Reason: coordinates nan"

	#log purposes
	date --iso-8601=ns >> /home/upboard/Desktop/UpBoard-Code-and-Results/Results/"$folder"/"$filename3"
	echo -e "Coordinates lost (nan). Error started \n" >> /home/upboard/Desktop/UpBoard-Code-and-Results/Results/"$folder"/"$filename3"

elif [ "$error_situation" == "1" ] && ([ "$latitude" != "nan" ] && [ "$longitude" != "nan" ]); then #The error disappears --> WE LEAVE THE ERROR STATE

	time_error_start=0
	time_error_now=0
	error_situation=0
	sudo echo "0" > /sys/class/gpio/gpio26/value #RED LED OFF
	
	#log terminal purposes
	echo -e "Error FINISHED. Reason: coordinates nan"

	#log purposes
	date --iso-8601=ns >> /home/upboard/Desktop/UpBoard-Code-and-Results/Results/"$folder"/"$filename3"
	echo -e "Coordinates recovered again. Error finished \n" >> /home/upboard/Desktop/UpBoard-Code-and-Results/Results/"$folder"/"$filename3"
fi




############################## 	WE CHECK IF WE HAVE BEEN MORE THAN THE TIME_OUT THRESHOLD WITH NAN COORDINATES (ONLY IN ERROR STATE) #################################

if [ "$error_situation" == "1" ];then

	time_error_now=$(date +%s%N)
	time_error_pass=$(echo "$time_error_now - $time_error_start" | bc -l)
	
	#log terminal purposes
	echo -e "We are countinously having nan coordinates\n"

	#log purposes
	date --iso-8601=ns >> /home/upboard/Desktop/UpBoard-Code-and-Results/Results/"$folder"/"$filename3"
	echo "Time passed with only nan: " >> /home/upboard/Desktop/UpBoard-Code-and-Results/Results/"$folder"/"$filename3"
	echo -e $(( $time_error_pass / 1000000000 )) "seconds (approximated) \n" >> /home/upboard/Desktop/UpBoard-Code-and-Results/Results/"$folder"/"$filename3"


	if [ "$time_error_pass" -gt "$time_out_error" ];then #timeout SECONDS from the error --> We reboot and start everything again
		
			#log purposes
			date --iso-8601=ns >> /home/upboard/Desktop/UpBoard-Code-and-Results/Results/"$folder"/"$filename3"
			echo "Time out exceeded. Too much time with coordinates = nan" >> /home/upboard/Desktop/UpBoard-Code-and-Results/Results/"$folder"/"$filename3"

			#log terminal purposes
			#echo -e "time out exceeded. Reason: coordinates nan. Preparing reboot"
			echo -e "Long time out exceeded. Reason: coordinates nan."

			#sudo /home/upboard/Desktop/UpBoard-Code-and-Results/Code/rebootInitialize $folder 
		
	fi

		
fi

done

