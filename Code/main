#!/bin/bash
folder=$1
sleep 5 #WE SLEEP 5 SECONDS TO WE CAN SAVE SOME STABLE PCI AND COORDINATES INFO.

#filename of log_general purposes (this includes saving decisions of antenna and others)
filename0=logs_general
filename1=logs_upload
filename3=errors_main

error_situation_python=0
first_time_pointing=0 #To now when it is the first time we switch to a dirctional antenna or first time after some error


#This values will be changed during the start of the system or in Initialize
PCI=460
lat=40
lon=1
lat_past=44
lon_past=3
antenna=0
speed=0 #km/h
SIM=$(sudo cat /home/upboard/Desktop/UpBoard-Code-and-Results/Code/SIM)
reason=NoReason
timepass=80000 #nanoseconds
start=$(date +%s%N)
distance_covered=2 #meters


##########################################################################################################################################################
##########################################################################################################################################################
##########################################################################################################################################################
##########################################################################################################################################################
##########################################################################################################################################################
########################################################## Start the infinite loop #######################################################################
##########################################################################################################################################################
##########################################################################################################################################################
##########################################################################################################################################################
##########################################################################################################################################################
###########################################################################################################################################################

while true; do
cd /home/upboard/Desktop/UpBoard-Code-and-Results/Code/BS_orientation/PCI_temp/ 
d=$(ls -c -Art -- *b* |tail -n1) #It takes the last one (bigger counter) with letter b 

if [[ $d == *"b"* ]]; then 
	mod=${d//[b]/a} #change b to a and read file
	newPCI=$(cat /home/upboard/Desktop/UpBoard-Code-and-Results/Code/BS_orientation/PCI_temp/$mod)
	nPCIfiles=$(ls -1A | wc -l)
	if [ "$nPCIfiles" -gt "3" ];then 
		ls -t /home/upboard/Desktop/UpBoard-Code-and-Results/Code/BS_orientation/PCI_temp/  | tail -n +4 | xargs rm --
	fi
fi

cd /home/upboard/Desktop/UpBoard-Code-and-Results/Code/BS_orientation/GPS/ 
d=$(ls -c -Art -- *b* |tail -n1)

if [[ $d == *"b"* ]]; then
	mod=${d//[b]/a} #change b to a and read file
	newcoordinates=$(cat /home/upboard/Desktop/UpBoard-Code-and-Results/Code/BS_orientation/GPS/$mod)
	ncoordinatesfiles=$(ls -1A | wc -l)
	if [ "$ncoordinatesfiles" -gt "3" ];then 
		ls -t /home/upboard/Desktop/UpBoard-Code-and-Results/Code/BS_orientation/GPS/  | tail -n +4 | xargs rm -- 
	fi
fi

newlat=$(echo "$newcoordinates" | sed -n 1p)  
newlon=$(echo "$newcoordinates" | sed -n 2p) 
newspeed=$(echo "$newcoordinates" | sed -n 3p) 

#log purposes general
date --iso-8601=ns >> /home/upboard/Desktop/UpBoard-Code-and-Results/Results/"$folder"/"$filename0"
echo "Readed PCI $newPCI" >> /home/upboard/Desktop/UpBoard-Code-and-Results/Results/"$folder"/"$filename0"
echo "Readed lat $newlat" >> /home/upboard/Desktop/UpBoard-Code-and-Results/Results/"$folder"/"$filename0"
echo -e "Readed lon $newlon\n" >> /home/upboard/Desktop/UpBoard-Code-and-Results/Results/"$folder"/"$filename0"

################################################################
################################################################
################################################################
################################################################
######## Check if PCI changed and needs to be updated ##########
################################################################
################################################################
################################################################




if [ "$newPCI" != "$PCI" ] && ([ "$newlat" != "$lat" ] || [ "$newlon" != "$lon" ]); then

	#log purposes general
	date --iso-8601=ns >> /home/upboard/Desktop/UpBoard-Code-and-Results/Results/"$folder"/"$filename0"
	echo -e "Changed PCI from $PCI to $newPCI, changed Lat from $lat to $newlat and Lon from $lon to $newlon\n" >> /home/upboard/Desktop/UpBoard-Code-and-Results/Results/"$folder"/"$filename0"
	#log terminal purposes
	echo -e "Changed PCI from $PCI to $newPCI, changed Lat from $lat to $newlat and Lon from $lon to $newlon\n" 
	now=$(date +%s%N)
	timepass=$(echo "$now - $start" | bc -l)
	start=$(date +%s%N)
	reason=NewPCI_and_NewCoordinates
	output=$(sudo python /home/upboard/Desktop/UpBoard-Code-and-Results/Code/BS_orientation/orientation.py $newlat $newlon $lat $lon $newPCI $SIM $speed $timepass $reason $folder)

################################# Check if output was not an error message###################################

	temp=$(echo "$output" | sed -n 1p)
	if ! [[ "$temp" =~ ^[0-9]+$ ]]; then
		date --iso-8601=ns >> /home/upboard/Desktop/UpBoard-Code-and-Results/Results/"$folder"/"$filename3"
		echo  "Error message from PCI and Coordinates change:" >> /home/upboard/Desktop/UpBoard-Code-and-Results/Results/"$folder"/"$filename3"
		echo -e "Error $temp\n" >> /home/upboard/Desktop/UpBoard-Code-and-Results/Results/"$folder"/"$filename3"

		if [ "$error_situation_python" == "0" ];then    #If it is the first time we get this error
			#log purposes
			date --iso-8601=ns >> /home/upboard/Desktop/UpBoard-Code-and-Results/Results/"$folder"/"$filename3"
			echo "Error started!!! Reason: python message error" >> /home/upboard/Desktop/UpBoard-Code-and-Results/Results/"$folder"/"$filename3"
			#log terminal purposes
			echo -e "Error started!!! Reason: python message error"
			error_situation_python=1
			first_time_pointing=0 #So we come back to the omnidirectional configuration without diversity
			sudo echo "0" > /sys/class/gpio/gpio27/value #We forget about omni diversity and put it back to the switch in the main port to acquire signal again with omni
			sudo /home/upboard/Desktop/UpBoard-Code-and-Results/Code/switch 6 #We select on the main port the omni antenna
		fi
	else
		antenna=$(echo "$output" | sed -n 1p)
		sudo /home/upboard/Desktop/UpBoard-Code-and-Results/Code/switch $antenna
		distance_covered=$(echo "$output" | sed -n 5p) 
		valid=$(echo "$output" | sed -n 6p) 
		speed=$(echo "$output" | sed -n 4p) #The new speed calculated by the python script (km/h)
		lat_past=$lat #We update the values
		lon_past=$lon #We update the values
		lat=$(echo "$output" | sed -n 2p) #We update the values. It should be $newlat but if nan, better we output from the python script the calculated lat
		lon=$(echo "$output" | sed -n 3p) #We update the values. It should be $newlat but if nan, better we output from the python script the calculated lon
		PCI=$newPCI #We update the value

		if [ "$first_time_pointing" == "0" ]; then #First switch on the demo or first after error
			sudo echo "1" > /sys/class/gpio/gpio27/value #We forget about omni antenna on the switch and we start using it in Rx diversity port again
			first_time_pointing=1
		fi


		
		if [ "$error_situation_python" == "1" ];then #If there was an error now has been solved
			error_situation_python=0
			#log terminal purposes
			echo -e "Error FINISHED. Reason: Python error"
			#log purposes
			date --iso-8601=ns >> /home/upboard/Desktop/UpBoard-Code-and-Results/Results/"$folder"/"$filename3"
			echo "Error from python was solved when changing because new PCI and coordinates. LED light OFF" >> /home/upboard/Desktop/UpBoard-Code-and-Results/Results/"$folder"/"$filename3"
		fi
		#log purposes general
		date --iso-8601=ns >> /home/upboard/Desktop/UpBoard-Code-and-Results/Results/"$folder"/"$filename0"
		echo "Calculated parameters. Reason:new PCI and newcoordinates" >> /home/upboard/Desktop/UpBoard-Code-and-Results/Results/"$folder"/"$filename0"
		echo "The state was $valid" >> /home/upboard/Desktop/UpBoard-Code-and-Results/Results/"$folder"/"$filename0"
		echo "The antenna selected is $antenna" >> /home/upboard/Desktop/UpBoard-Code-and-Results/Results/"$folder"/"$filename0"
		echo -e "The distance covere is $distance_covered\n" >> /home/upboard/Desktop/UpBoard-Code-and-Results/Results/"$folder"/"$filename0"
	fi

elif [ "$newPCI" != "$PCI" ]; then  #THERE IS A NEW PCI!
	#log purposes general
	date --iso-8601=ns >> /home/upboard/Desktop/UpBoard-Code-and-Results/Results/"$folder"/"$filename0"
	echo -e "Changed PCI from $PCI to $newPCI\n" >> /home/upboard/Desktop/UpBoard-Code-and-Results/Results/"$folder"/"$filename0"
	#log terminal purposes
	echo -e "Changed PCI from $PCI to $newPCI\n"
	now=$(date +%s%N)
	timepass=$(echo "$now - $start" | bc -l)
	start=$(date +%s%N)
	reason=NewPCI
	output=$(sudo python /home/upboard/Desktop/UpBoard-Code-and-Results/Code/BS_orientation/orientation.py $lat $lon $lat_past $lon_past $newPCI $SIM $speed $timepass $reason $folder)

################################# Check if output was not an error message###################################
	temp=$(echo "$output" | sed -n 1p)
	if ! [[ "$temp" =~ ^[0-9]+$ ]]; then
		date --iso-8601=ns >> /home/upboard/Desktop/UpBoard-Code-and-Results/Results/"$folder"/"$filename3"
		echo  "Error message from PCI change:" >> /home/upboard/Desktop/UpBoard-Code-and-Results/Results/"$folder"/"$filename3"
		echo -e "Error $temp\n" >> /home/upboard/Desktop/UpBoard-Code-and-Results/Results/"$folder"/"$filename3"

		if [ "$error_situation_python" == "0" ];then    #If it is the first time we get this error
			#log purposes
			date --iso-8601=ns >> /home/upboard/Desktop/UpBoard-Code-and-Results/Results/"$folder"/"$filename3"
			echo "Error started!!! Reason: python message error" >> /home/upboard/Desktop/UpBoard-Code-and-Results/Results/"$folder"/"$filename3"
			#log terminal purposes
			echo -e "Error started!!! Reason: python message error"
			error_situation_python=1
			first_time_pointing=0 #So we come back to the omnidirectional configuration without diversity
			sudo echo "0" > /sys/class/gpio/gpio27/value #We forget about omni diversity and put it back to the switch in the main port to acquire signal again with omni
			sudo /home/upboard/Desktop/UpBoard-Code-and-Results/Code/switch 6 #We select on the main port the omni antenna
		fi
	else	
		antenna=$(echo "$output" | sed -n 1p)
		sudo /home/upboard/Desktop/UpBoard-Code-and-Results/Code/switch $antenna
		distance_covered=$(echo "$output" | sed -n 5p) 
		valid=$(echo "$output" | sed -n 6p) 
		PCI=$newPCI #We update the value
		
		if [ "$first_time_pointing" == "0" ]; then #First switch on the demo or first after error
			sudo echo "1" > /sys/class/gpio/gpio27/value #We forget about omni antenna on the switch and we start using it in Rx diversity port again
			first_time_pointing=1
		fi

		if [ "$error_situation_python" == "1" ];then #If there was an error now has been solved
			error_situation_python=0
			#log terminal purposes
			echo -e "Error FINISHED. Reason: Python error"
			#log purposes
			date --iso-8601=ns >> /home/upboard/Desktop/UpBoard-Code-and-Results/Results/"$folder"/"$filename3"
			echo "Error from python was solved when changing because new PCI." >> /home/upboard/Desktop/UpBoard-Code-and-Results/Results/"$folder"/"$filename3"
		fi

		#log purposes general
		date --iso-8601=ns >> /home/upboard/Desktop/UpBoard-Code-and-Results/Results/"$folder"/"$filename0"
		echo "Calculated parameters. Reason:new PCI" >> /home/upboard/Desktop/UpBoard-Code-and-Results/Results/"$folder"/"$filename0"
		echo "The state was $valid" >> /home/upboard/Desktop/UpBoard-Code-and-Results/Results/"$folder"/"$filename0"
		echo "The antenna selected is $antenna" >> /home/upboard/Desktop/UpBoard-Code-and-Results/Results/"$folder"/"$filename0"
		echo -e "The distance covered is $distance_covered\n" >> /home/upboard/Desktop/UpBoard-Code-and-Results/Results/"$folder"/"$filename0"
	fi

################################################################
################################################################
################################################################
################################################################
# Check if GPS changed and needs to be updated
################################################################
################################################################
################################################################

elif [ "$newlat" != "$lat" ] || [ "$newlon" != "$lon" ]; then #THERE ARE NEW COORDINATES
	now=$(date +%s%N)
	timepass=$(echo "$now - $start" | bc -l)
	start=$(date +%s%N)
	reason=NewCoordinates
	output=$(sudo python /home/upboard/Desktop/UpBoard-Code-and-Results/Code/BS_orientation/orientation.py $newlat $newlon $lat $lon $PCI $SIM $speed $timepass $reason $folder)
	
############################################ Check if output was not an error message########################################################
	temp=$(echo "$output" | sed -n 1p)
	if ! [[ "$temp" =~ ^[0-9]+$ ]]; then
		#log purposes
		date --iso-8601=ns >> /home/upboard/Desktop/UpBoard-Code-and-Results/Results/"$folder"/"$filename3"
		echo  "Error message from GPS change:" >> /home/upboard/Desktop/UpBoard-Code-and-Results/Results/"$folder"/"$filename3"
		echo -e "Error $temp\n" >> /home/upboard/Desktop/UpBoard-Code-and-Results/Results/"$folder"/"$filename3"
		if [ "$error_situation_python" == "0" ];then #If it is the first time we get this error
			#log purposes
			date --iso-8601=ns >> /home/upboard/Desktop/UpBoard-Code-and-Results/Results/"$folder"/"$filename3"
			echo "Error started!!! Reason: Python error" >> /home/upboard/Desktop/UpBoard-Code-and-Results/Results/"$folder"/"$filename3"
			#log terminal purposes
			echo -e "Error started!!! Reason: Python error"
			error_situation_python=1
			first_time_pointing=0 #So we come back to the omnidirectional configuration without diversity
			sudo echo "0" > /sys/class/gpio/gpio27/value #We forget about omni diversity and put it back to the switch in the main port to acquire signal again with omni
			sudo /home/upboard/Desktop/UpBoard-Code-and-Results/Code/switch 6 #We select on the main port the omni antenna
		fi
	else
		antenna=$(echo "$output" | sed -n 1p)
		sudo /home/upboard/Desktop/UpBoard-Code-and-Results/Code/switch $antenna
		lat_past=$lat #We update the values
		lon_past=$lon #We update the values
		lat=$(echo "$output" | sed -n 2p) #We update the values. It should be $newlat but if nan, better we output from the python script the calculated lat
		lon=$(echo "$output" | sed -n 3p) #We update the values. It should be $newlat but if nan, better we output from the python script the calculated lon
		speed=$(echo "$output" | sed -n 4p) #The new speed calculated by the python script (km/h)
		distance_covered=$(echo "$output" | sed -n 5p) #Distance to BS (log purposes)
		valid=$(echo "$output" | sed -n 6p) 

		#log purposes terminal
		echo "Changed coordinates from $lat_past, $lon_past to $lat, $lon"
		#log purposes general
		date --iso-8601=ns >> /home/upboard/Desktop/UpBoard-Code-and-Results/Results/"$folder"/"$filename0"
		echo -e "Changed coordinates from $lat_past, $lon_past to $lat, $lon\n" >> /home/upboard/Desktop/UpBoard-Code-and-Results/Results/"$folder"/"$filename0"

		if [ "$first_time_pointing" == "0" ]; then #First switch on the demo or first after error
			sudo echo "1" > /sys/class/gpio/gpio27/value #We forget about omni antenna on the switch and we start using it in Rx diversity port again
			first_time_pointing=1
		fi

		if [ "$error_situation_python" == "1" ];then #If there was an error now has been solved
			error_situation_python=0
			#log terminal purposes
			echo -e "Error FINISHED. Reason: Python error"
			#log purposes
			date --iso-8601=ns >> /home/upboard/Desktop/UpBoard-Code-and-Results/Results/"$folder"/"$filename3"
			echo "Error from python was solved when changing because new coordinates." >> /home/upboard/Desktop/UpBoard-Code-and-Results/Results/"$folder"/"$filename3"
		fi
		#log purposes general
		date --iso-8601=ns >> /home/upboard/Desktop/UpBoard-Code-and-Results/Results/"$folder"/"$filename0"
		echo "Calculated parameters. Reason:new Coordinates" >> /home/upboard/Desktop/UpBoard-Code-and-Results/Results/"$folder"/"$filename0"
		echo "The state was $valid" >> /home/upboard/Desktop/UpBoard-Code-and-Results/Results/"$folder"/"$filename0"
		echo "The antenna selected is $antenna" >> /home/upboard/Desktop/UpBoard-Code-and-Results/Results/"$folder"/"$filename0"
		echo -e "The distance covered is $distance_covered\n" >> /home/upboard/Desktop/UpBoard-Code-and-Results/Results/"$folder"/"$filename0"
	fi
else #Both PCI and coordinates have the same values
	#log purposes general
	date --iso-8601=ns >> /home/upboard/Desktop/UpBoard-Code-and-Results/Results/"$folder"/"$filename0"
	echo -e "No change coordinates neither PCI\n" >> /home/upboard/Desktop/UpBoard-Code-and-Results/Results/"$folder"/"$filename0"
fi


done
